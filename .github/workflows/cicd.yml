name: CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'docker-compose.yml'
      - '.github/workflows/**'
  workflow_dispatch:  

jobs:
  dockerize-and-deploy:
    name: Build, Push & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Pull latest code
        uses: actions/checkout@v3

      - name: Authenticate with Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/hotel-booking-platform-backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/hotel-booking-platform-backend:latest

      - name: Inject API URL and Build + Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/hotel-booking-platform-frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/hotel-booking-platform-frontend:latest

      - name: Setup SSH key for EC2
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ec2.pem
          chmod 600 ec2.pem

      - name: Copy docker-compose and .env to EC2
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          scp -i ec2.pem -o StrictHostKeyChecking=no docker-compose.yml ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/
          scp -i ec2.pem -o StrictHostKeyChecking=no .env ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/

      - name: SSH into EC2 and Deploy
        run: |
          ssh -i ec2.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            cd /home/ec2-user
            docker-compose --env-file .env down || true
            docker-compose --env-file .env pull
            docker-compose --env-file .env up -d --remove-orphans
          EOF
